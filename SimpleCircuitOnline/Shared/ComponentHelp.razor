@using SimpleCircuit.Circuits.Spans
@using SimpleCircuit.Drawing;
@using SimpleCircuit.Drawing.Spans
@using SimpleCircuit.Parser.SimpleTexts;
@inject ITextFormatter _textFormatter

<div class="bd-callout container">
    <div class="preview">
        <div class="preview-bounds" style="min-width: @(MaxPreviewWidth)px;">
            @(_svg)
        </div>
    </div>
    <div class="content">
        @if (Metadata != null)
        {
            bool isFirst = true;
            <h5>@Metadata.Key<small class="text-muted">name</small></h5>
            <p>@(Metadata.Description)</p>
            <p class="code">
                <span class="key">@Metadata.Key</span>
                @foreach (string variant in CurrentVariantModifiers)
                {
                    @if (isFirst)
                    {
                        isFirst = false;
                        <span class="bracket">(</span>
                    }
                    else
                    {
                        <span class="comma">, </span>
                    }
                    <span class="variant">@variant</span>
                }
                @foreach (string lbl in CurrentLabels)
                {
                    @if (isFirst)
                    {
                        isFirst = false;
                        <span class="bracket">(</span>
                    }
                    else
                    {
                        <span class="comma">, </span>
                    }
                    <span class="string">"@lbl"</span>
                }
                @if (!isFirst)
                {
                    <span class="bracket">)</span>
                }
            </p>
        }
        @if (_drawable != null)
        {
            <HelpAccordion>
                <HelpAccordionItem Title="Pins" Count="_drawable.Pins.Count">
                    <dl>
                        @foreach (var pin in _drawable.Pins)
                        {
                            <dt><strong>@(string.Join(", ", _drawable.Pins.NamesOf(pin)))</strong></dt>
                            <dd>@(pin.Description)</dd>
                        }
                    </dl>
                </HelpAccordionItem>
                <HelpAccordionItem Title="Properties" Count="Properties.Count">
                    <dl>
                        @foreach (var property in Properties)
                        {
                            <dt><strong>@(string.Join(", ", property.Item2))</strong> <small class="text-muted">@(GetTypeName(property.Item1.PropertyType))</small></dt>
                            <dd>@(property.Item3)</dd>
                        }
                    </dl>
                </HelpAccordionItem>
                <HelpAccordionItem Title="Variants" Count="_drawable.Variants.BranchCount">
                    <p>
                        @foreach (var variant in _drawable.Variants)
                        {
                            <a href="javascript:void(0);" class="shown" @onclick="x => ToggleVariant(variant)">@variant</a>
                        }
                        <br />
                        @foreach (var variant in _drawable.Variants.Branches)
                        {
                            <a href="javascript:void(0);" @onclick="x => ToggleVariant(variant)">@variant</a>
                        }
                    </p>
            </HelpAccordionItem>
        </HelpAccordion>
        }
    </div>
</div>