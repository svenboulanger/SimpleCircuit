using SpiceSharp.Attributes;
using SpiceSharp.Components;

namespace SimpleCircuit.Components.Constraints.SlopedMinimumConstraints
{
    /// <summary>
    /// A component that guarantees a minimum between two coordinates in 2D space with an offset
    /// followed by a minimum distance along a normal.
    /// </summary>
    [Pin(0, "x1"), Pin(1, "y1"), Pin(2, "x2"), Pin(3, "y2"), Connected(0, 1), Connected(2, 3), AutoGeneratedBehaviors]
    public partial class SlopedMinimumConstraint : Component<Parameters>
    {
        /// <summary>
        /// Creates a new <see cref="SlopedMinimumConstraint"/>.
        /// </summary>
        /// <param name="name">The name of the constraint.</param>
        /// <param name="x">The origin X-coordinate.</param>
        /// <param name="tx">The end X-coordinate.</param>
        /// <param name="y">The origin Y-coordinate.</param>
        /// <param name="ty">The end Y-coordinate.</param>
        /// <param name="offset">The offset.</param>
        /// <param name="normal">The normal.</param>
        public SlopedMinimumConstraint(string name,
            string x1, string y1,
            string x2, string y2,
            Vector2 offset, Vector2 normal, double minimum)
            : base(name, 4)
        {
            Connect(x1, y1, x2, y2);
            Parameters.Offset = offset;
            Parameters.Normal = normal;
            Parameters.Minimum = minimum;
        }

        /// <inheritdoc />
        public override string ToString() => $"Minimum ({Nodes[0]}, {Nodes[1]}) -> ({Nodes[2]}, {Nodes[3]})";
    }
}
